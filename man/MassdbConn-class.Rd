% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MassdbConn.R
\docType{class}
\name{MassdbConn-class}
\alias{MassdbConn-class}
\alias{MassdbConn}
\title{The mother class of all Mass spectra databases.}
\arguments{
\item{ids}{A list of entry identifiers (i.e.: accession numbers). Used to restrict the set of entries on which to run the algorithm.}

\item{dist.fun}{The distance function used to compute the distance betweem two mass spectra.}

\item{max.results}{The maximum of elements returned by a method.}

\item{min.rel.int}{The minimum relative intensity, in percentage (i.e.: float number between 0 and 100).}

\item{ms.level}{The MS level to which you want to restrict your search. \code{0} means that you want to serach in all levels.}

\item{ms.mode}{The MS mode. Set it to either \code{BIODB.MSMODE.NEG} or \code{BIODB.MSMODE.POS}.}

\item{msms.mz.tol}{M/Z tolerance to apply while matching MSMS spectra. In PPM.}

\item{msms.mz.tol.min}{Minimum of the M/Z tolerance (plain unit). If the M/Z tolerance computed with \code{msms.mz.tol} is lower than \code{msms.mz.tol.min}, then \code{msms.mz.tol.min} will be used.}

\item{mz}{An M/Z value.}

\item{mz.max}{The maximum allowed for searched M/Z values.}

\item{mz.min}{The minimum allowed for searched M/Z values.}

\item{mz.tol}{The M/Z tolerance, whose unit is defined by \code{mz.tol.unit}.}

\item{mz.tol.unit}{The unit of the M/Z tolerance. Set it to either \code{'ppm'} or \code{'plain'}.}

\item{npmin}{The minimum number of peak to detect a match (2 is recommended).}

\item{precursor}{If set to \code{TRUE}, then restrict the search to precursor peaks.}

\item{precursor.mz}{The M/Z value of the precursor peak of the mass spectrum.}

\item{spectrum}{A template spectrum to match inside the database.}
}
\description{
All Mass spectra databases inherit from this class. It thus defines methods specific to mass spectrometry.
}
\section{Methods}{

\describe{
\item{\code{getChromCol(ids = NULL)}}{:

Get a list of chromatographic columns contained in this database. You can filter on specific entries using the ids parameter. The returned value is a data.frame with two columns : one for the ID 'id' and another one for the title 'title'.}

\item{\code{getEntryIds(max.results = NA_integer_)}}{:

Get entry identifiers from the database.}

\item{\code{getMzValues(ms.mode = NA_character_, max.results = NA_integer_,
  precursor = FALSE, ms.level = 0)}}{:

Get a list of M/Z values contained inside the database.}

\item{\code{getNbPeaks(mode = NULL, ids = NULL)}}{:

Returns the number of peaks contained in the database.}

\item{\code{msmsSearch(spectrum, precursor.mz, mz.tol, mz.tol.unit = "plain", ms.mode,
  npmin = 2, dist.fun = BIODB.MSMS.DIST.WCOSINE, msms.mz.tol = 3,
  msms.mz.tol.min = 0.005, max.results = NA_integer_)}}{:

Search MSMS spectra matching a template spectrum. The mz.tol parameter is applied on the precursor search.}

\item{\code{searchMsPeaks(mzs, mz.tol, mz.tol.unit = BIODB.MZTOLUNIT.PLAIN,
  min.rel.int = NA_real_, ms.mode = NA_character_,
  max.results = NA_integer_)}}{:

For each M/Z value, search for matching MS spectra and return the matching peaks. If max.results is set, it is used to limit the number of matches found for each M/Z value.}

\item{\code{searchMzRange(mz.min, mz.max, min.rel.int = NA_real_,
  ms.mode = NA_character_, max.results = NA_integer_, precursor = FALSE,
  ms.level = 0)}}{:

Find spectra in the given M/Z range. Returns a list of spectra IDs.}

\item{\code{searchMzTol(mz, mz.tol, mz.tol.unit = BIODB.MZTOLUNIT.PLAIN,
  min.rel.int = NA_real_, ms.mode = NA_character_,
  max.results = NA_integer_, precursor = FALSE, ms.level = 0)}}{:

Find spectra containg a peak around the given M/Z value. Returns a character vector of spectra IDs.}
}}

\examples{
# Create an instance with default settings:
mybiodb <- biodb::Biodb()

# Get connector
conn <- mybiodb$getFactory()$createConn('massbank.jp')


}
\seealso{
\code{\link{BiodbConn}}.
}
