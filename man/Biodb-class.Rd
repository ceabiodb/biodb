% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Biodb.R
\docType{class}
\name{Biodb-class}
\alias{Biodb-class}
\alias{Biodb}
\title{The central class of the biodb package.}
\arguments{
\item{compute}{If set to \code{TRUE} and an entry has not the field defined, then try to compute the field values.}

\item{entries}{A list of \code{BiodbEntry} objects.}

\item{field}{The name of a field.}

\item{files}{A list of file paths.}

\item{flatten}{If set to \code{TRUE} and the field has a cardinality greater than one, then values are collapsed and output is a vector of class character.}

\item{null.to.na}{If \code{TRUE}, each \code{NULL} entry is converted into a line of \code{NA} values inside the data frame."}

\item{observers}{Either a \code{BiodbObserver} class instance or a list of \code{BiodbObserver} class instances.}

\item{only.atomic}{Set to \code{TRUE} if you want only the fields of atomic type (\code{integer}, \code{numeric}, \code{logical} and \code{character}) inside the data frame.}
}
\description{
In order to use the biodb package, you need first to create an instance of this class. See section Fields for a list of the constructor's parameters.
}
\section{Fields}{

\describe{
\item{\code{logger}}{Set to \code{FALSE} if you want to disable the default logger.}

\item{\code{observers}}{Either a \code{BiodbObserver} class instance or a list of \code{BiodbObserver} class instances.}
}}

\section{Methods}{

\describe{
\item{\code{addObservers(observers)}}{:

Add new observers. Observers will be called each time an event occurs. This is the way used in biodb to get feedback about what is going inside biodb code.}

\item{\code{computeFields(entries)}}{:

Compute missing fields in entries.}

\item{\code{entriesFieldToVctOrLst(entries, field, flatten = FALSE, compute = TRUE)}}{:

Extract the value of a field from a list of entries.

Returns either a vector or a list depending on the type of the field.}

\item{\code{entriesToDataframe(entries, only.atomic = TRUE, null.to.na = TRUE,
  compute = TRUE, fields = NULL, drop = FALSE)}}{:

Convert a list of entries (\code{BiodbEntry} objects) into a data frame.}

\item{\code{entriesToJson(entries, compute = TRUE)}}{:

Convert a list of BiodbEntry objects into JSON. Returns a vector of characters.}

\item{\code{getCache()}}{:

Returns the single instance of the \code{BiodbCache} class.}

\item{\code{getConfig()}}{:

Returns the single instance of the \code{BiodbConfig} class.}

\item{\code{getDbsInfo()}}{:

Returns the single instance of the \code{BiodbDbsInfo} class.}

\item{\code{getEntryFields()}}{:

Returns the single instance of the \code{BiodbEntryFields} class.}

\item{\code{getFactory()}}{:

Returns the single instance of the \code{BiodbFactory} class.}

\item{\code{getObservers()}}{:

Get the list of registered observers.}

\item{\code{saveEntriesAsJson(entries, files, compute = TRUE)}}{:

Save a list of entries in JSON format.}
}}

\examples{
# Create an instance with default settings:
mybiodb <- biodb::Biodb()

# Create an instance without the default logger:
mybiodb <- biodb::Biodb(logger = FALSE)

# Create an instance with a file logger
mybiodb <- biodb::Biodb(logger = FALSE, observers = biodb::BiodbLogger(file = "file.log"))

}
\seealso{
\code{\link{BiodbFactory}}, \code{\link{BiodbCache}}, \code{\link{BiodbConfig}}, \code{\link{BiodbObserver}}, \code{\link{BiodbLogger}}, \code{\link{BiodbEntryFields}}, \code{\link{BiodbDbsInfo}}.
}
