% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BiodbSdfEntry.R
\name{BiodbSdfEntry}
\alias{BiodbSdfEntry}
\title{Entry class for content in SDF format.}
\description{
This is an abstract class for handling database entries whose content is in
SDF format.
}
\examples{
# Create a concrete entry class inheriting from CSV class:
MyEntry <- R6::R6Class("MyEntry", contains="BiodbSdfEntry")

}
\seealso{
Super class \code{\link{BiodbTxtEntry}}.
}
\section{Super classes}{
\code{\link[biodb:BiodbEntry]{biodb::BiodbEntry}} -> \code{\link[biodb:BiodbTxtEntry]{biodb::BiodbTxtEntry}} -> \code{BiodbSdfEntry}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BiodbSdfEntry$new()}}
\item \href{#method-clone}{\code{BiodbSdfEntry$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="appendFieldValue">}\href{../../biodb/html/BiodbEntry.html#method-appendFieldValue}{\code{biodb::BiodbEntry$appendFieldValue()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="cloneInstance">}\href{../../biodb/html/BiodbEntry.html#method-cloneInstance}{\code{biodb::BiodbEntry$cloneInstance()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="computeFields">}\href{../../biodb/html/BiodbEntry.html#method-computeFields}{\code{biodb::BiodbEntry$computeFields()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="fieldHasBasicClass">}\href{../../biodb/html/BiodbEntry.html#method-fieldHasBasicClass}{\code{biodb::BiodbEntry$fieldHasBasicClass()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getBiodb">}\href{../../biodb/html/BiodbEntry.html#method-getBiodb}{\code{biodb::BiodbEntry$getBiodb()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getDbClass">}\href{../../biodb/html/BiodbEntry.html#method-getDbClass}{\code{biodb::BiodbEntry$getDbClass()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getField">}\href{../../biodb/html/BiodbEntry.html#method-getField}{\code{biodb::BiodbEntry$getField()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldCardinality">}\href{../../biodb/html/BiodbEntry.html#method-getFieldCardinality}{\code{biodb::BiodbEntry$getFieldCardinality()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldClass">}\href{../../biodb/html/BiodbEntry.html#method-getFieldClass}{\code{biodb::BiodbEntry$getFieldClass()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldDef">}\href{../../biodb/html/BiodbEntry.html#method-getFieldDef}{\code{biodb::BiodbEntry$getFieldDef()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldNames">}\href{../../biodb/html/BiodbEntry.html#method-getFieldNames}{\code{biodb::BiodbEntry$getFieldNames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldValue">}\href{../../biodb/html/BiodbEntry.html#method-getFieldValue}{\code{biodb::BiodbEntry$getFieldValue()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldsAsDataframe">}\href{../../biodb/html/BiodbEntry.html#method-getFieldsAsDataframe}{\code{biodb::BiodbEntry$getFieldsAsDataframe()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldsAsJson">}\href{../../biodb/html/BiodbEntry.html#method-getFieldsAsJson}{\code{biodb::BiodbEntry$getFieldsAsJson()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getFieldsByType">}\href{../../biodb/html/BiodbEntry.html#method-getFieldsByType}{\code{biodb::BiodbEntry$getFieldsByType()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getId">}\href{../../biodb/html/BiodbEntry.html#method-getId}{\code{biodb::BiodbEntry$getId()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getName">}\href{../../biodb/html/BiodbEntry.html#method-getName}{\code{biodb::BiodbEntry$getName()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="getParent">}\href{../../biodb/html/BiodbEntry.html#method-getParent}{\code{biodb::BiodbEntry$getParent()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="hasField">}\href{../../biodb/html/BiodbEntry.html#method-hasField}{\code{biodb::BiodbEntry$hasField()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="isNew">}\href{../../biodb/html/BiodbEntry.html#method-isNew}{\code{biodb::BiodbEntry$isNew()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="makesRefToEntry">}\href{../../biodb/html/BiodbEntry.html#method-makesRefToEntry}{\code{biodb::BiodbEntry$makesRefToEntry()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="parentIsAConnector">}\href{../../biodb/html/BiodbEntry.html#method-parentIsAConnector}{\code{biodb::BiodbEntry$parentIsAConnector()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="parseContent">}\href{../../biodb/html/BiodbEntry.html#method-parseContent}{\code{biodb::BiodbEntry$parseContent()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="print">}\href{../../biodb/html/BiodbEntry.html#method-print}{\code{biodb::BiodbEntry$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="removeField">}\href{../../biodb/html/BiodbEntry.html#method-removeField}{\code{biodb::BiodbEntry$removeField()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="setField">}\href{../../biodb/html/BiodbEntry.html#method-setField}{\code{biodb::BiodbEntry$setField()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="biodb" data-topic="BiodbEntry" data-id="setFieldValue">}\href{../../biodb/html/BiodbEntry.html#method-setFieldValue}{\code{biodb::BiodbEntry$setFieldValue()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiodbSdfEntry$new(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BiodbSdfEntry$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
