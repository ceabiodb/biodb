% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BiodbObserver.R
\docType{class}
\name{BiodbObserver-class}
\alias{BiodbObserver-class}
\alias{BiodbObserver}
\title{The mother abstract class of all observer classes.}
\description{
This abstract class defines all the methods that can be used to send messages
to the observers. You can define new observer classes by inherting from this
class.
}
\section{Methods}{

\describe{
\item{\code{notifyProgress(what, index, total)}}{:

Notify about the progress of an action.
    
what: A short description of the action.
    
index: A positive integer number indicating the progress.
    
total: The maximum for "index". When reached, the action is completed.
    
Returned value: None.
    }

\item{\code{terminate()}}{:

Terminates the instance. This method will be called
    automatically by the Biodb instance when you call Biodb::terminate().
    
Returned value: None.
    }
}}

\examples{
# Define a new observer class
MyObsClass <- methods::setRefClass("MyObsClass", contains='BiodbObserver',
  methods=list(notifyProgress=function(what, index, total) {
      sprintf("Progress for \%s is \%d / \%d.", what, index, total)
  }
))

# Create an instance and register an instance of the new observer class:
mybiodb <- biodb::Biodb()
mybiodb$addObservers(MyObsClass$new())

# Terminate instance.
mybiodb$terminate()

}
