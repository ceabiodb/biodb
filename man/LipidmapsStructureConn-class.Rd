% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LipidmapsStructureConn.R
\docType{class}
\name{LipidmapsStructureConn-class}
\alias{LipidmapsStructureConn-class}
\alias{LipidmapsStructureConn}
\title{Lipidmaps Structure connector class.}
\description{
This is a concrete connector class. It must never be instantiated directly,
but instead be instantiated through the factory \code{\link{BiodbFactory}}.
Only specific methods are described here. See super classes for the
description of inherited methods.
}
\section{Methods}{

\describe{
\item{\code{getEntryPageUrl(entry.id)}}{:

Gets the URL to the page of the entry on the database web site.
    
entry.id: A character vector with the IDs of entries to retrieve.
    
Returned value: A list of BiodbUrl objects, the same length as `entry.id`.
    }

\item{\code{searchCompound(name = NULL, mass = NULL, mass.field = NULL,
  mass.tol = 0.01, mass.tol.unit = "plain", max.results = NA_integer_)}}{Search for compounds by name and/or by mass. At least one of name or mass
    must be set.
    
name: The name of a compound to search for.
    
mass: The searched mass.
    
mass.field: For searching by mass, you must indicate a mass field to use
    ('monoisotopic.mass', 'molecular.mass', 'average.mass' or 'nominal.mass').
    
mass.tol: The tolerance value on the molecular mass.
    
mass.tol.unit: The type of mass tolerance. Either 'plain' or 'ppm'.
    
max.results: The maximum number of matches to return.
    
Returned value: A character vector of entry IDs.}

\item{\code{wsLmsdRecord(lmid, mode = NULL, output.type = NULL,
  output.delimiter = NULL, output.quote = NULL,
  output.column.header = NULL, retfmt = c("plain", "request", "parsed"))}}{:

Calls LMSDRecord web service. See
    http://www.lipidmaps.org/data/structure/programmaticaccess.html.
    
lmid: A character vector containing the IDs of the wanted entries.
    
output.mode: If set to 'File', will output a in format `output.type`,
    otherwise will output HTML.
    
output.type: The output format: 'TSV', 'CSV' or 'SDF'.
    
output.delimiter: The delimiter for TSV or CSV formats: 'Tab', 'Comma',
    'Semicolon'.
    
output.quote: If quotes are to be used: 'Yes' or 'No'.
    
output.column.header: If header must be output: 'Yes' or 'No'.
    
retfmt: Use to set the format of the returned value. 'plain' will return
    the raw results from the server, as a character value. 'request' will return
    the request that would have been sent, as a BiodbRequest object. 'parsed'
    will return data frame.
    
Returned value: Depending on `retfmt`.
    }

\item{\code{wsLmsdSearch(mode = NULL, output.mode = NULL, output.type = NULL,
  output.delimiter = NULL, output.quote = NULL,
  output.column.header = NULL, lmid = NULL, name = NULL, formula = NULL,
  search.type = NULL, smiles.string = NULL, exact.mass = NA_real_,
  exact.mass.offset = NA_real_, core.class = NULL, main.class = NULL,
  sub.class = NULL, retfmt = c("plain", "request", "parsed", "ids"))}}{:

Calls LMSDSearch web service. See
    http://www.lipidmaps.org/data/structure/programmaticaccess.html for details.
    
mode: The search mode: 'ProcessStrSearch', 'ProcessTextSearch' or
    'ProcessTextOntologySearch'.
    
output.mode: If set to 'File', will output a in format `output.type`,
    otherwise will output HTML.
    
output.type: The output format: 'TSV', 'CSV' or 'SDF'.
    
output.delimiter: The delimiter for TSV or CSV formats: 'Tab', 'Comma',
    'Semicolon'.
    
output.quote: If quotes are to be used: 'Yes' or 'No'.
    
output.column.header: If header must be output: 'Yes' or 'No'.
    
lmid: a Lipidmaps ID.
    
name: The name to search for.
    
formula: The chemical formula to search for.
    
search.type: The search type: 'SubStructure' or 'ExactMatch'.
    
smiles.string: A SMILES to search for.
    
exact.mass: The mass to search for.
    
exact.mass.offset: The tolerance on the mass search.
    
core.class: An integer number from 1 to 8.
    
main.class: An integer number. See Lipidmaps documentation.
    
sub.class: An integer number. See Lipidmaps documentation.
    
retfmt: Use to set the format of the returned value. 'plain' will return
    the raw results from the server, as a character value. 'request' will return
    the request that would have been sent, as a BiodbRequest object. 'parsed'
    will return data frame. 'ids' will return a character vector containing the
    IDs of the matching entries.
    
Returned value: Depending on `retfmt`.
    }
}}

\examples{
# Create an instance with default settings:
mybiodb <- biodb::Biodb()

# Create a connector
conn <- mybiodb$getFactory()$createConn('lipidmaps.structure')

# Get an entry
e <- conn$getEntry('LMFA00000001')

# Terminate instance.
mybiodb$terminate()

}
\seealso{
\code{\link{BiodbFactory}}.
}
