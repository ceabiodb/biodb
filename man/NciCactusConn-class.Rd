% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NciCactusConn.R
\docType{class}
\name{NciCactusConn-class}
\alias{NciCactusConn-class}
\alias{NciCactusConn}
\title{Connector for accessing the NCI database, using CACTUS services.
See https://www.cancer.gov/ and https://cactus.nci.nih.gov/.}
\description{
Connector for accessing the NCI database, using CACTUS services.
See https://www.cancer.gov/ and https://cactus.nci.nih.gov/.
}
\section{Methods}{

\describe{
\item{\code{conv(ids, repr)}}{Calls wsChemicalIdentifierResolver() to convert the list of IDs `ids` into
the representation `repr`.}

\item{\code{convCasToInchi(cas)}}{Convert a list of CAS IDs into a list of InChI.}

\item{\code{convCasToInchikey(cas)}}{Convert a list of CAS IDs into a list of InChI keys.}

\item{\code{getEntryPageUrl(entry.id)}}{:

Gets the URL to the page of the entry on the database web site.
    
entry.id: A character vector with the IDs of entries to retrieve.
    
Returned value: A list of BiodbUrl objects, the same length as `entry.id`.
    }

\item{\code{getNbEntries(count = FALSE)}}{:

Get the number of entries contained in this database.
    
count: If set to TRUE and no straightforward way exists to get number of
    entries, count the output of getEntryIds().
    
Returned value: The number of entries in the database, as an integer.
    }

\item{\code{wsChemicalIdentifierResolver(structid, repr, xml = FALSE,
  retfmt = c("plain", "parsed", "request", "ids"))}}{Calls Chemical Identifier Resolver web service. `structid` is the submitted
structure identifier, `repr` is the wanted representation and xml is a flag
for choosing the format returned by the web service between plain text and
XML.
See https://cactus.nci.nih.gov/chemical/structure_documentation.}
}}

